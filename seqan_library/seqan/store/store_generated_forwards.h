 /*==========================================================================
                SeqAn - The Library for Sequence Analysis
                          http://www.seqan.de 
 ============================================================================
  Copyright (C) 2007

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

 ==========================================================================*/

#ifndef SEQAN_HEADER_STORE_GENERATED_FORWARDS_H 
#define SEQAN_HEADER_STORE_GENERATED_FORWARDS_H 

//////////////////////////////////////////////////////////////////////////////
// NOTE: This file is automatically generated by build_forwards.py
//       Do not edit this file manually!
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
// CLASSES
//////////////////////////////////////////////////////////////////////////////

namespace SEQAN_NAMESPACE_MAIN {

//____________________________________________________________________________
// AlignedReadStoreElement

template <typename TPos, typename TGapAnchor, typename TSpec > struct AlignedReadStoreElement;       	// "projects/library/seqan/store/store_align.h"(33)

//____________________________________________________________________________
// AnnotationStoreElement

template <typename TPos, typename TSpec > struct AnnotationStoreElement;       	// "projects/library/seqan/store/store_annotation.h"(33)

//____________________________________________________________________________
// Cigar

template <typename TChar , typename TNum > struct Cigar;       	// "projects/library/seqan/store/store_io_sam.h"(47)

//____________________________________________________________________________
// ContigStoreElement

template <typename TContigSeq, typename TGapAnchor, typename TSpec > struct ContigStoreElement;       	// "projects/library/seqan/store/store_contig.h"(35)

//____________________________________________________________________________
// FastaReadFormat_

struct FastaReadFormat_;       	// "projects/library/seqan/store/store_io.h"(47)

//____________________________________________________________________________
// FragmentStore

template <typename TSpec , typename TConfig > struct FragmentStore;       	// "projects/library/seqan/store/store_all.h"(59)

//____________________________________________________________________________
// FragmentStoreConfig

template <typename TSpec > struct FragmentStoreConfig;       	// "projects/library/seqan/store/store_all.h"(35)

//____________________________________________________________________________
// GapAnchor

template <typename TPos> struct GapAnchor;       	// "projects/library/seqan/store/store_base.h"(36)

//____________________________________________________________________________
// LibraryStoreElement

template <typename TMean , typename TStd , typename TSpec > struct LibraryStoreElement;       	// "projects/library/seqan/store/store_library.h"(35)

//____________________________________________________________________________
// MatePairStoreElement

template <typename TSpec > struct MatePairStoreElement;       	// "projects/library/seqan/store/store_matepair.h"(35)

//____________________________________________________________________________
// ReadStoreElement

template <typename TReadSeq, typename TPos, typename TSpec > struct ReadStoreElement;       	// "projects/library/seqan/store/store_read.h"(33)

//____________________________________________________________________________
// TagAmos_

struct TagAmos_;       	// "projects/library/seqan/store/store_io.h"(37)

//____________________________________________________________________________
// _LessAlignedRead

template <typename TAlignedRead, typename TTag> struct _LessAlignedRead;       	// "projects/library/seqan/store/store_align.h"(91)

//____________________________________________________________________________
// _LessGapAnchor

template <typename TGapAnchor, typename TTag> struct _LessGapAnchor;       	// "projects/library/seqan/store/store_base.h"(62)

//____________________________________________________________________________
// _SortBeginPos

struct _SortBeginPos;       	// "projects/library/seqan/store/store_align.h"(70)

//____________________________________________________________________________
// _SortContigId

struct _SortContigId;       	// "projects/library/seqan/store/store_align.h"(63)

//____________________________________________________________________________
// _SortEndPos

struct _SortEndPos;       	// "projects/library/seqan/store/store_align.h"(73)

//____________________________________________________________________________
// _SortGapPos

struct _SortGapPos;       	// "projects/library/seqan/store/store_base.h"(56)

//____________________________________________________________________________
// _SortId

struct _SortId;       	// "projects/library/seqan/store/store_align.h"(67)

//____________________________________________________________________________
// _SortPairMatchId

struct _SortPairMatchId;       	// "projects/library/seqan/store/store_align.h"(76)

//____________________________________________________________________________
// _SortReadId

struct _SortReadId;       	// "projects/library/seqan/store/store_align.h"(79)

//____________________________________________________________________________
// _SortSeqPos

struct _SortSeqPos;       	// "projects/library/seqan/store/store_base.h"(53)

//____________________________________________________________________________
// comparePosLengthPair

struct comparePosLengthPair;       	// "projects/library/seqan/store/store_io_sam.h"(564)

} //namespace SEQAN_NAMESPACE_MAIN


//////////////////////////////////////////////////////////////////////////////
// TYPEDEFS
//////////////////////////////////////////////////////////////////////////////

namespace SEQAN_NAMESPACE_MAIN {

//____________________________________________________________________________
// Amos

typedef Tag<TagAmos_> const Amos;       	// "projects/library/seqan/store/store_io.h"(38)

//____________________________________________________________________________
// FastaReadFormat

typedef Tag<FastaReadFormat_> const FastaReadFormat;       	// "projects/library/seqan/store/store_io.h"(48)

//____________________________________________________________________________
// SortBeginPos

typedef Tag<_SortBeginPos> const SortBeginPos;       	// "projects/library/seqan/store/store_align.h"(71)

//____________________________________________________________________________
// SortContigId

typedef Tag<_SortContigId> const SortContigId;       	// "projects/library/seqan/store/store_align.h"(64)

//____________________________________________________________________________
// SortEndPos

typedef Tag<_SortEndPos> const SortEndPos;       	// "projects/library/seqan/store/store_align.h"(74)

//____________________________________________________________________________
// SortGapPos

typedef Tag<_SortGapPos> const SortGapPos;       	// "projects/library/seqan/store/store_base.h"(57)

//____________________________________________________________________________
// SortId

typedef Tag<_SortId> const SortId;       	// "projects/library/seqan/store/store_align.h"(68)

//____________________________________________________________________________
// SortPairMatchId

typedef Tag<_SortPairMatchId> const SortPairMatchId;       	// "projects/library/seqan/store/store_align.h"(77)

//____________________________________________________________________________
// SortReadId

typedef Tag<_SortReadId> const SortReadId;       	// "projects/library/seqan/store/store_align.h"(80)

//____________________________________________________________________________
// SortSeqPos

typedef Tag<_SortSeqPos> const SortSeqPos;       	// "projects/library/seqan/store/store_base.h"(54)

} //namespace SEQAN_NAMESPACE_MAIN


//////////////////////////////////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////////////////////////////////

namespace SEQAN_NAMESPACE_MAIN {

//____________________________________________________________________________
// _appendContig

template <typename TSpec, typename TConfig, typename TId, typename TName, typename TContigGaps> inline void _appendContig(FragmentStore<TSpec, TConfig> & fragStore, TId & contigId, TName & rName, TContigGaps & contigGap);       	// "projects/library/seqan/store/store_io_sam.h"(481)

//____________________________________________________________________________
// _appendRead

template <typename TSpec, typename TConfig, typename TId, typename TName, typename TString, typename TFlag> inline void _appendRead(FragmentStore<TSpec, TConfig> & fragStore, TId & readId, TName & qname, TString & readSeq, TFlag & flag);       	// "projects/library/seqan/store/store_io_sam.h"(413)

//____________________________________________________________________________
// _convertSimpleReadFile

template <typename TFile, typename TSpec, typename TConfig, typename TFilePath> inline bool _convertSimpleReadFile(TFile& file, FragmentStore<TSpec, TConfig>& fragStore, TFilePath& filePath, bool moveToFront);       	// "projects/library/seqan/store/store_io.h"(800)

//____________________________________________________________________________
// _generatePairMatchIds

template <typename TSpec, typename TConfig, typename TMateInfo, typename TSize> inline void _generatePairMatchIds(FragmentStore<TSpec, TConfig> & fragStore, TMateInfo mateInfos, TSize shift);       	// "projects/library/seqan/store/store_io_sam.h"(515)

//____________________________________________________________________________
// _getClippedLength

template <typename TChar, typename TNum, typename TNum2> inline void _getClippedLength(Cigar<TChar, TNum> const & cigar, TNum2 & sum);       	// "projects/library/seqan/store/store_io_sam.h"(69)

//____________________________________________________________________________
// _getGappedConsensusSeq

template <typename TSpec, typename TConfig, typename TGappedConsensus, typename TSize> inline void _getGappedConsensusSeq(FragmentStore<TSpec, TConfig>& fragStore, TGappedConsensus& gappedConsensus, TSize contigId);       	// "projects/library/seqan/store/store_io.h"(1323)

//____________________________________________________________________________
// _getID

template <typename TType, typename TID> inline bool _getID(StringSet<TType> & store, TType & elem, TID & elem_id);       	// "projects/library/seqan/store/store_io_sam.h"(351)

//____________________________________________________________________________
// _getMate

template <typename TSpec, typename TConfig, typename TPos, typename TID> inline void _getMate(FragmentStore<TSpec, TConfig> & fragStore, String<char> & readName, TPos & mPos, TID & mateID);       	// "projects/library/seqan/store/store_io_sam.h"(319)

//____________________________________________________________________________
// _parse_is_PhredQual

template <typename TChar> inline bool _parse_is_PhredQual(TChar const & c);       	// "projects/library/seqan/store/store_io_sam.h"(711)

//____________________________________________________________________________
// _parse_is_dna

template <typename TChar> inline bool _parse_is_dna(TChar const & c);       	// "projects/library/seqan/store/store_io_sam.h"(683)

//____________________________________________________________________________
// _parse_readCharsTillEndOfLine

template <typename TFile, typename TChar> inline void _parse_readCharsTillEndOfLine(TFile & file, String<char> & str, TChar& c);       	// "projects/library/seqan/store/store_io_sam.h"(752)

//____________________________________________________________________________
// _parse_readCigar

template <typename TFile, typename TChar, typename TNum> inline void _parse_readCigar(TFile & file, Cigar<TChar, TNum> & cigar, TChar& c);       	// "projects/library/seqan/store/store_io_sam.h"(641)

//____________________________________________________________________________
// _parse_readDnaSeq

template <typename TFile, typename TString, typename TChar> inline void _parse_readDnaSeq(TFile & file, TString & str, TChar& c);       	// "projects/library/seqan/store/store_io_sam.h"(693)

//____________________________________________________________________________
// _parse_readSamIdentifier

template <typename TFile, typename TString, typename TChar> inline void _parse_readSamIdentifier(TFile & file, TString & str, TChar& c);       	// "projects/library/seqan/store/store_io_sam.h"(667)

//____________________________________________________________________________
// _parse_readSeqQual

template <typename TFile, typename TChar> inline void _parse_readSeqQual(TFile & file, String<Dna5Q> & str, TChar& c);       	// "projects/library/seqan/store/store_io_sam.h"(724)

//____________________________________________________________________________
// _print_gapAnchor

template <typename TChar, typename TGapAnchor> inline void _print_gapAnchor(String<TChar> seq, String<TGapAnchor> gaps);       	// "projects/library/seqan/store/store_io_sam.h"(266)

//____________________________________________________________________________
// _readAlignments

template <typename TFile, typename TSpec, typename TConfig, typename TContigGaps, typename TMateInfo, typename TChar> inline void _readAlignments(TFile& file, FragmentStore<TSpec, TConfig>& fragStore, TContigGaps & contigGaps, TMateInfo & mateInfos, TChar & c, SAM);       	// "projects/library/seqan/store/store_io_sam.h"(848)

//____________________________________________________________________________
// _readHeader

template <typename TFile, typename TSpec, typename TConfig, typename TChar> inline void _readHeader(TFile& file, FragmentStore<TSpec, TConfig>& fragStore, TChar & c, SAM);       	// "projects/library/seqan/store/store_io_sam.h"(827)

//____________________________________________________________________________
// _readOneAlignment

template <typename TFile, typename TSpec, typename TConfig, typename TContigGaps, typename TMateInfo, typename TChar> inline void _readOneAlignment(TFile& file, FragmentStore<TSpec, TConfig>& fragStore, TContigGaps & contigsGaps, TMateInfo & mateInfos, TChar & c, SAM);       	// "projects/library/seqan/store/store_io_sam.h"(884)

//____________________________________________________________________________
// _writeAlignments

template <typename TFile, typename TFragmentStore> inline void _writeAlignments(TFile & target, TFragmentStore const & store, SAM);       	// "projects/library/seqan/store/store_io_sam_out.h"(50)

//____________________________________________________________________________
// _writeCeleraCgb

template <typename TFile, typename TSpec, typename TConfig> inline void _writeCeleraCgb(TFile& target, FragmentStore<TSpec, TConfig>& fragStore);       	// "projects/library/seqan/store/store_io.h"(1599)

//____________________________________________________________________________
// _writeCeleraFrg

template <typename TFile, typename TSpec, typename TConfig> inline void _writeCeleraFrg(TFile& target, FragmentStore<TSpec, TConfig>& fragStore);       	// "projects/library/seqan/store/store_io.h"(1517)

//____________________________________________________________________________
// _writeContigsGapsInStore

template <typename TFragmentStore, typename TContigPos> inline void _writeContigsGapsInStore(TFragmentStore & fragStore, StringSet<String<Pair<TContigPos, TContigPos> > > const & contigsGaps);       	// "projects/library/seqan/store/store_io_sam.h"(578)

//____________________________________________________________________________
// append

template <typename TChar, typename TNum> inline void append(Cigar<TChar, TNum> & cigar, TChar const c, TNum const i);       	// "projects/library/seqan/store/store_io_sam.h"(59)

//____________________________________________________________________________
// appendAlignment

template <typename TSpec, typename TConfig, typename TId, typename TPos, typename TGaps> inline void appendAlignment( FragmentStore<TSpec, TConfig> & fragStore, TId & readId, TId & contigId, TPos & beginPos, TPos & endPos, TGaps & gaps);       	// "projects/library/seqan/store/store_io_sam.h"(382)

//____________________________________________________________________________
// appendRead

template <typename TSpec, typename TConfig, typename TRead, typename TId> inline typename Size<typename FragmentStore<TSpec, TConfig>::TReadStore>::Type appendRead( FragmentStore<TSpec, TConfig> &me, TRead const &read, TId matePairId);       	// "projects/library/seqan/store/store_all.h"(141)
template <typename TSpec, typename TConfig, typename TRead> inline typename Size<typename FragmentStore<TSpec, TConfig>::TReadStore>::Type appendRead( FragmentStore<TSpec, TConfig> &me, TRead const &read);       	// "projects/library/seqan/store/store_all.h"(158)

//____________________________________________________________________________
// cigarToContigGaps

template <typename TChar, typename TNum, typename TPos, typename TFlag, typename TGap> inline void cigarToContigGaps(Cigar<TChar, TNum> const & cigar, TPos beginPos, TFlag flag, String<Pair<TGap, TGap> > & gaps);       	// "projects/library/seqan/store/store_io_sam.h"(173)

//____________________________________________________________________________
// cigarToGapAnchorRead

template <typename TChar, typename TNum, typename TGapAnchor> inline void cigarToGapAnchorRead(Cigar<TChar, TNum> const & cigar, String<TGapAnchor> & gaps);       	// "projects/library/seqan/store/store_io_sam.h"(94)

//____________________________________________________________________________
// clearReads

template <typename TSpec, typename TConfig> inline void clearReads(FragmentStore<TSpec, TConfig> &me);       	// "projects/library/seqan/store/store_all.h"(130)

//____________________________________________________________________________
// convertAlignment

template <typename TSpec, typename TConfig, typename TMatrix, typename TSize2, typename TSize, typename TReadSlot> inline bool convertAlignment(FragmentStore<TSpec, TConfig>& fragStore, TMatrix& mat, TSize2 contigId, TSize& coverage, TReadSlot& slot);       	// "projects/library/seqan/store/store_io.h"(1184)
template <typename TSpec, typename TConfig, typename TMatrix, typename TSize2, typename TSize> inline bool convertAlignment(FragmentStore<TSpec, TConfig>& fragStore, TMatrix& mat, TSize2 contigId, TSize& coverage);       	// "projects/library/seqan/store/store_io.h"(1297)
template <typename TSpec, typename TConfig, typename TMatrix> inline bool convertAlignment(FragmentStore<TSpec, TConfig>& fragStore, TMatrix& mat);       	// "projects/library/seqan/store/store_io.h"(1309)

//____________________________________________________________________________
// getClrRange

template <typename TSpec, typename TConfig, typename TPos, typename TGapAnchor, typename TSpecAlign, typename TBeginClr, typename TEndClr> inline void getClrRange(FragmentStore<TSpec, TConfig> const& fragStore, AlignedReadStoreElement<TPos, TGapAnchor, TSpecAlign> const& alignEl, TBeginClr& begClr, TEndClr& endClr);       	// "projects/library/seqan/store/store_io.h"(64)

//____________________________________________________________________________
// getRead

template <typename TSpec, typename TConfig, typename TId> inline typename Value<typename FragmentStore<TSpec, TConfig>::TReadSeqStore>::Type getRead( FragmentStore<TSpec, TConfig> &me, TId id);       	// "projects/library/seqan/store/store_all.h"(170)

//____________________________________________________________________________
// lowerBoundAlignedReads

template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type lowerBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortId);       	// "projects/library/seqan/store/store_align.h"(188)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type lowerBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortContigId);       	// "projects/library/seqan/store/store_align.h"(224)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type lowerBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortBeginPos);       	// "projects/library/seqan/store/store_align.h"(260)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type lowerBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortEndPos);       	// "projects/library/seqan/store/store_align.h"(297)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type lowerBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortPairMatchId);       	// "projects/library/seqan/store/store_align.h"(334)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type lowerBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortReadId);       	// "projects/library/seqan/store/store_align.h"(370)

//____________________________________________________________________________
// lowerBoundGapAnchor

template <typename TGapAnchor, typename TSearchValue> inline typename Iterator<TGapAnchor, Standard>::Type lowerBoundGapAnchor(TGapAnchor const& gaps, TSearchValue const val, SortSeqPos);       	// "projects/library/seqan/store/store_base.h"(97)
template <typename TGapAnchor, typename TSearchValue> inline typename Iterator<TGapAnchor, Standard>::Type lowerBoundGapAnchor(TGapAnchor const& gaps, TSearchValue const val, SortGapPos);       	// "projects/library/seqan/store/store_base.h"(133)

//____________________________________________________________________________
// read

template <typename TFile, typename TSpec, typename TConfig> inline void read(TFile & file, FragmentStore<TSpec, TConfig>& fragStore, Amos);       	// "projects/library/seqan/store/store_io.h"(113)
template <typename TFile, typename TSpec, typename TConfig> inline void read(TFile& file, FragmentStore<TSpec, TConfig>& fragStore, SAM);       	// "projects/library/seqan/store/store_io_sam.h"(778)

//____________________________________________________________________________
// sortAlignedReads

template <typename TAlign, typename TSortSpec> inline void sortAlignedReads(TAlign& alignStore, Tag<TSortSpec>);       	// "projects/library/seqan/store/store_align.h"(162)
template <typename TAlign, typename TSortSpec> inline void sortAlignedReads(TAlign const& alignStore, Tag<TSortSpec>);       	// "projects/library/seqan/store/store_align.h"(174)

//____________________________________________________________________________
// upperBoundAlignedReads

template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type upperBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortId);       	// "projects/library/seqan/store/store_align.h"(206)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type upperBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortContigId);       	// "projects/library/seqan/store/store_align.h"(242)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type upperBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortBeginPos);       	// "projects/library/seqan/store/store_align.h"(278)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type upperBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortEndPos);       	// "projects/library/seqan/store/store_align.h"(315)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type upperBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortPairMatchId);       	// "projects/library/seqan/store/store_align.h"(352)
template <typename TAlign, typename TSearchValue> inline typename Iterator<TAlign, Standard>::Type upperBoundAlignedReads(TAlign const& alignStore, TSearchValue const val, SortReadId);       	// "projects/library/seqan/store/store_align.h"(388)

//____________________________________________________________________________
// upperBoundGapAnchor

template <typename TGapAnchor, typename TSearchValue> inline typename Iterator<TGapAnchor, Standard>::Type upperBoundGapAnchor(TGapAnchor const& gaps, TSearchValue const val, SortSeqPos);       	// "projects/library/seqan/store/store_base.h"(115)
template <typename TGapAnchor, typename TSearchValue> inline typename Iterator<TGapAnchor, Standard>::Type upperBoundGapAnchor(TGapAnchor const& gaps, TSearchValue const val, SortGapPos);       	// "projects/library/seqan/store/store_base.h"(151)

//____________________________________________________________________________
// write

template <typename TFile, typename TFragmentStore> inline void write(TFile & target, TFragmentStore const & store, SAM);       	// "projects/library/seqan/store/store_io_sam_out.h"(36)
template <typename TFile, typename TSpec, typename TConfig> inline void write(TFile & target, FragmentStore<TSpec, TConfig>& fragStore, Amos);       	// "projects/library/seqan/store/store_io.h"(527)
template <typename TFile, typename TSpec, typename TConfig> inline void write(TFile & file, FragmentStore<TSpec, TConfig>& fragStore, FastaReadFormat);       	// "projects/library/seqan/store/store_io.h"(1355)

} //namespace SEQAN_NAMESPACE_MAIN

#endif

